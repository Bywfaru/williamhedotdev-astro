---
import type { CollectionEntry, InferEntrySchema } from 'astro:content';
import { Button } from '../../home/general/Button';
import tailwindConfig from '../../../../../tailwind.config.mjs';
import { getImage } from 'astro:assets';

export type CatalogCardProps = {
  entry: CollectionEntry<'projects'>;
};
type Props = CatalogCardProps;

const { entry } = Astro.props;
const { data, id } = entry;
const optimizedHeaderImage = data.headerImage
  ? await getImage({ src: data.headerImage })
  : null;
const headerBackgroundColor =
  data.headerBackgroundColor ||
  (tailwindConfig.theme?.colors as Record<string, string> | undefined)
    ?.tertiary;
---

<a
  href={`/projects/${id}`}
  class:list={[
    'group',
    'flex',
    'flex-col',
    'bg-primary',
    'rounded-3xl',
    'overflow-hidden',
    'shadow-2xl',
    'px-4',
    'py-5',
    'gap-5',
    'transition',
  ]}
>
  <div
    class:list={[
      'w-full',
      'aspect-video',
      'text-accent-2',
      'flex',
      'items-center',
      'justify-center',
      'overflow-hidden',
      'rounded-t-xl',
    ]}
    style={`background-color: ${headerBackgroundColor}`}
  >
    {
      optimizedHeaderImage && (
        <img
          src={optimizedHeaderImage.src}
          alt={`Header image for ${data.name}`}
          loading="lazy"
          class:list={[
            'size-full',
            'object-cover',
            'object-center',
            'group-hover:scale-105',
            'transition',
          ]}
        />
      )
    }

    {!data.headerImage && <span>Image coming soon...</span>}
  </div>

  <div class:list={['flex', 'flex-col']}>
    <h1 class:list={['text-2xl', 'text-accent-1']}>{data.name}</h1>
    <h2 class:list={['text-lg', 'font-mono', 'text-tertiary']}>
      {data.stack.join(', ')}
    </h2>
  </div>

  <p class:list={['text-ellipsis', 'line-clamp-4']}>
    {data.description}
  </p>

  <Button type="button">Read more</Button>
</a>
