---
import Breadcrumb from '@/components/Breadcrumb/Breadcrumb.astro';
import { Button } from '@/components/pageSpecific/home/general/Button';
import MainLayout from '@/layouts/MainLayout.astro';
import type { GetStaticPaths } from 'astro';
import { getImage } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import { getCollection, render } from 'astro:content';
import tailwindConfig from '../../../tailwind.config.mjs';

type Props = CollectionEntry<'projects'>;

export const getStaticPaths: GetStaticPaths = async () => {
  const portfolioEntries = await getCollection('projects');

  return portfolioEntries.map((entry) => ({
    params: { id: entry.id },
    props: entry,
  }));
};

const { data, id } = Astro.props;
const {
  description,
  headerImage,
  name,
  stack,
  visitUrl,
  headerBackgroundColor = (
    tailwindConfig.theme?.colors as Record<string, string> | undefined
  )?.tertiary,
} = data;
const { Content } = await render(Astro.props);
const optimizedHeaderImage = headerImage
  ? await getImage({ src: headerImage })
  : null;
---

<MainLayout title={name} description={description}>
  <div
    slot="outer"
    class:list={['w-full', 'h-60', 'p-10', 'lg:h-80']}
    style={`background-color: ${headerBackgroundColor}`}
  >
    {
      !!optimizedHeaderImage && (
        <img
          class:list={['w-full', 'h-full', 'object-contain', 'object-center']}
          src={optimizedHeaderImage.src}
          alt={`Header image for ${name}`}
        />
      )
    }
  </div>

  <div class:list={['flex', 'flex-col', 'gap-8', 'pt-10']}>
    <Breadcrumb
      links={[
        {
          label: 'Home',
          href: '/',
        },
        {
          label: 'Projects',
          href: '/projects',
        },
        {
          label: name,
          href: `/projects/${id}`,
        },
      ]}
    />

    <div class:list={['flex', 'flex-col', 'gap-2']}>
      <h1 class:list={['text-6xl', 'text-accent-1']}>{name}</h1>
      <h2 class:list={['text-2xl', 'font-mono', 'text-tertiary']}>
        {stack.join(', ')}
      </h2>
    </div>

    <article
      class:list={[
        'flex',
        'flex-col',
        'gap-5',
        '[&_h2]:text-4xl',
        '[&_h2]:text-accent-1',
        '[&_strong]:text-accent-2',
        '[&_a:not(.button)]:text-accent-2',
        '[&_a:not(.button)]:underline',
        '[&_a:not(.button)]:transition',
        '[&_a:not(.button):hover]:bg-accent-2',
        '[&_a:not(.button):hover]:text-primary',
        '[&_ul]:list-disc',
        '[&_ul]:ml-10',
      ]}
    >
      {
        !!visitUrl && (
          <Button type="link" variant="secondary" href={visitUrl}>
            Visit {name}
          </Button>
        )
      }

      <Content />
    </article>
  </div>
</MainLayout>
